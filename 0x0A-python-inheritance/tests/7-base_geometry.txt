This file contains test cases for '7-base_geometry.py'
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

(1) Test case 1
>>> a = BaseGeometry()
>>> a.integer_validator("variable", 1.45)
Traceback (most recent call last):
	...
TypeError: variable must be an integer

(2) Test case 2
>>> a = BaseGeometry()
>>> a.integer_validator("integer", -3)
Traceback (most recent call last):
	...
ValueError: integer must be greater than 0

(3) Test case 3
>>> a = BaseGeometry()
>>> a.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented

(4) Test case 4
>>> a = BaseGeometry()
>>> a.integer_validator()
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

(5) Test case 5
>>> a = BaseGeometry()
>>> a.integer_validator("name")
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

(6) Test case 6
>>> a = BaseGeometry()
>>> a.integer_validator("name", None)
Traceback (most recent call last):
	...
TypeError: name must be an integer

(7) Test case 7
>>> a = BaseGeometry()
>>> a.integer_validator("name", [1, 2])
Traceback (most recent call last):
	...
TypeError: name must be an integer

(8) Test case 8
>>> a = BaseGeometry()
>>> a.integer_validator("name", (3, 6))
Traceback (most recent call last):
	...
TypeError: name must be an integer
